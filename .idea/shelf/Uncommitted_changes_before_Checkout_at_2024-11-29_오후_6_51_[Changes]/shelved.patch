Index: user/src/main/java/edu/sm/controller/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.sm.controller;\r\n\r\nimport edu.sm.app.dto.UserDto;\r\nimport edu.sm.app.service.UserService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport lombok.RequiredArgsConstructor;\r\nimport edu.sm.app.dto.UserDto;\r\nimport edu.sm.app.service.UserService;\r\nimport edu.sm.utill.HpDate;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.json.simple.parser.ParseException;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n@Controller\r\n@Slf4j\r\npublic class MainController {\r\n\r\n    @Value(\"${app.key.apikey}\")\r\n    String apikey;\r\n\r\n\r\n\r\n\r\n    private final UserService userService;\r\n\r\n    public MainController(UserService userService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    @RequestMapping(\"/\")\r\n    public String main(Model model) {\r\n        log.info(\"Start Main ,,,,,,\");\r\n        return \"index\";\r\n    }\r\n\r\n    @GetMapping(\"/login\")\r\n    public String loginForm(Model model) {\r\n        log.info(\"로그인 페이지 로드\");\r\n        model.addAttribute(\"center\", \"login\"); // center에 \"login\" 설정\r\n        return \"index\"; // 메인 레이아웃 페이지로 이동\r\n    }\r\n\r\n    // 로그인 처리 요청(POST)\r\n    @PostMapping(\"/login\")\r\n    public String login(String username, String password, HttpSession session, Model model) {\r\n        try {\r\n            log.info(\"로그인 시도: username={}\", username);\r\n            UserDto user = userService.authenticate(username, password);\r\n            if (user != null) {\r\n                // 세션에 UserDto 저장\r\n                session.setAttribute(\"user\", user);\r\n                log.info(\"로그인 성공: userId={}, userName={}\", user.getUserId(), user.getUserName());\r\n                return \"redirect:/board\"; // 로그인 성공 시 게시판 메인으로 이동\r\n            } else {\r\n                model.addAttribute(\"errorMessage\", \"아이디 또는 비밀번호가 잘못되었습니다.\");\r\n                log.warn(\"로그인 실패: 아이디 또는 비밀번호 오류\");\r\n                return \"login\";\r\n            }\r\n        } catch (Exception e) {\r\n            log.error(\"로그인 처리 중 오류 발생\", e);\r\n            model.addAttribute(\"errorMessage\", \"로그인 처리 중 오류가 발생했습니다.\");\r\n            return \"login\";\r\n        }\r\n    }\r\n\r\n    @RequestMapping(\"/register\")\r\n    public String register(Model model) {\r\n        model.addAttribute(\"center\", \"register\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/contact\")\r\n    public String contact(Model model) {\r\n        model.addAttribute(\"center\", \"contact\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/about\")\r\n    public String about(Model model) {\r\n        model.addAttribute(\"center\", \"about\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/courses\")\r\n    public String courses(Model model) {\r\n        model.addAttribute(\"center\", \"courses\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/Test\")\r\n    public String test(Model model) {\r\n        model.addAttribute(\"center\", \"gethp\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/gethp\")\r\n    public String gethp(Model model) {\r\n        model.addAttribute(\"center\", \"gethp\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/apiTest\")\r\n    public String apiTest(Model model) {\r\n        model.addAttribute(\"center\", \"apiTest\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/map\")\r\n    public String map(Model model) {\r\n        model.addAttribute(\"center\", \"map\");\r\n        return \"index\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//    @RequestMapping(\"/reservation\")\r\n//    public String reservations(Model model) {\r\n//        model.addAttribute(\"center\",\"reservation\");\r\n//        return \"index\";\r\n//    }\r\n\r\n    @RequestMapping(\"/reservation\")\r\n    public String reservations(HttpSession session, Model model) throws Exception {\r\n        UserDto userDto = (UserDto) session.getAttribute(\"loginid\");\r\n\r\n        if (userDto == null) {\r\n            System.out.println(\"세션에 로그인된 사용자 정보 없음\");\r\n            model.addAttribute(\"message\", \"Please log in first.\");\r\n            return \"redirect:/login\"; // 로그인 페이지로 리다이렉트\r\n        }\r\n\r\n        String userId = userDto.getUserId();\r\n        System.out.println(\"로그인된 사용자 ID: \" + userId);\r\n\r\n\r\n        model.addAttribute(\"userId\",userId);\r\n\r\n        model.addAttribute(\"center\",\"reservation\");\r\n\r\n\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/mapTest\")\r\n    public String map(HttpSession session, Model model) throws Exception {\r\n        UserDto userDto = (UserDto) session.getAttribute(\"loginid\");\r\n\r\n        if (userDto == null) {\r\n            System.out.println(\"세션에 로그인된 사용자 정보 없음\");\r\n            model.addAttribute(\"message\", \"Please log in first.\");\r\n            return \"redirect:/login\"; // 로그인 페이지로 리다이렉트\r\n        }\r\n\r\n        String userAddress = userDto.getUserAddress();\r\n        System.out.println(\"로그인된 사용자 Address: \" + userAddress);\r\n\r\n\r\n        model.addAttribute(\"userAddress\",userAddress);\r\n\r\n        model.addAttribute(\"center\",\"mapTest\");\r\n\r\n\r\n        return \"index\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @RequestMapping(\"/team\")\r\n    public String team(Model model) {\r\n        model.addAttribute(\"center\", \"team\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/errorpage\")\r\n    public String errorpage(Model model) {\r\n        model.addAttribute(\"center\", \"errorpage\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/testimonial\")\r\n    public String testimonial(Model model) {\r\n        model.addAttribute(\"center\", \"testimonial\");\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(\"/mypage\")\r\n    public String mypage(HttpSession session, Model model) throws Exception {\r\n        // 세션에서 UserDto 가져오기\r\n        UserDto userDto = (UserDto) session.getAttribute(\"loginid\");\r\n\r\n        // 세션에 로그인 정보가 없는 경우 처리\r\n        if (userDto == null) {\r\n            System.out.println(\"세션에 로그인된 사용자 정보 없음\");\r\n            model.addAttribute(\"message\", \"Please log in first.\");\r\n            return \"redirect:/login\"; // 로그인 페이지로 리다이렉트\r\n        }\r\n\r\n        // UserDto에서 userId 추출\r\n        String userId = userDto.getUserId();\r\n        System.out.println(\"로그인된 사용자 ID: \" + userId);\r\n\r\n        // userId로 사용자 정보 조회\r\n        List<UserDto> users = userService.findById(userId);\r\n\r\n        // 사용자 정보 모델에 추가\r\n        if (users.isEmpty()) {\r\n            model.addAttribute(\"message\", \"No user data found for ID: \" + userId);\r\n            System.out.println(\"사용자 정보 없음\");\r\n        } else {\r\n            model.addAttribute(\"user\", users.get(0));\r\n        }\r\n\r\n        model.addAttribute(\"center\", \"mypage\");\r\n        return \"index\";\r\n    }\r\n\r\n\r\n\r\n\r\n    @RequestMapping(\"/hpdataload\")\r\n    @ResponseBody\r\n    public Object hpdataload(Model model) throws IOException, ParseException {\r\n\r\n        return HpDate.getHpAddress(apikey);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @RequestMapping(\"/forgot\")\r\n    public String forgot(Model model) {\r\n        model.addAttribute(\"center\", \"forgot\");\r\n        return \"index\";\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/user/src/main/java/edu/sm/controller/MainController.java b/user/src/main/java/edu/sm/controller/MainController.java
--- a/user/src/main/java/edu/sm/controller/MainController.java	(revision be38fb3a87c522f6746825324fc7e30aef55889a)
+++ b/user/src/main/java/edu/sm/controller/MainController.java	(date 1732873783825)
@@ -50,7 +50,7 @@
         return "index";
     }
 
-    @GetMapping("/login")
+    @RequestMapping("/login")
     public String loginForm(Model model) {
         log.info("로그인 페이지 로드");
         model.addAttribute("center", "login"); // center에 "login" 설정
