<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.sm.app.repository.AnswerRepository">





    <update id="updateGroupId" parameterType="edu.sm.app.dto.AnswerDto">
        UPDATE answer
        SET group_id = #{groupId}
        WHERE answer_id = #{answerId};
    </update>

    <insert id="insertAnswer" parameterType="edu.sm.app.dto.AnswerDto" useGeneratedKeys="true" keyProperty="answerId">
        INSERT INTO answer (answer_content, answer_date, user_id, user_name, board_id, group_id, depth)
        VALUES (#{answerContent}, NOW(), #{userId}, #{userName}, #{boardId}, #{groupId}, #{depth});
    </insert>

    <insert id="insertReply" parameterType="edu.sm.app.dto.AnswerDto">
        INSERT INTO answer (answer_content, answer_date, user_id, user_name, board_id, parent_answer_id, group_id, depth)
        VALUES (#{answerContent}, NOW(), #{userId}, #{userName}, #{boardId}, #{parentAnswerId}, #{groupId}, #{depth});
    </insert>

    <!-- 특정 게시글의 모든 댓글 및 대댓글 조회 (그룹과 깊이 기준 정렬) -->
    <select id="selectAnswersByBoardId" parameterType="int" resultType="edu.sm.app.dto.AnswerDto">
        SELECT answer_id AS answerId,
               answer_content AS answerContent,
               answer_date AS answerDate,
               user_id AS userId,
               user_name AS userName,
               board_id AS boardId,
               parent_answer_id AS parentAnswerId,
               group_id AS groupId,
               depth AS depth
        FROM answer
        WHERE board_id = #{boardId}
        ORDER BY group_id ASC, depth ASC, answer_date ASC;
    </select>

    <!-- 특정 댓글 조회 (Answer ID 기준) -->
    <select id="selectAnswerById" parameterType="int" resultType="edu.sm.app.dto.AnswerDto">
        SELECT answer_id AS answerId,
               answer_content AS answerContent,
               answer_date AS answerDate,
               user_id AS userId,
               user_name AS userName,
               board_id AS boardId,
               parent_answer_id AS parentAnswerId,
               group_id AS groupId,
               depth AS depth
        FROM answer
        WHERE answer_id = #{answerId};
    </select>

    <!-- 특정 댓글의 대댓글만 조회 -->
    <select id="selectRepliesByParentId" parameterType="int" resultType="edu.sm.app.dto.AnswerDto">
        SELECT answer_id AS answerId,
               answer_content AS answerContent,
               answer_date AS answerDate,
               user_id AS userId,
               user_name AS userName,
               board_id AS boardId,
               parent_answer_id AS parentAnswerId,
               group_id AS groupId,
               depth AS depth
        FROM answer
        WHERE parent_answer_id = #{parentAnswerId}
        ORDER BY depth ASC, answer_date ASC;
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteAnswerById" parameterType="int">
        DELETE FROM answer WHERE answer_id = #{answerId};
    </delete>

    <!-- 댓글 수정 -->
    <update id="updateAnswer" parameterType="edu.sm.app.dto.AnswerDto">
        UPDATE answer
        SET answer_content = #{answerContent},
            answer_date = NOW()
        WHERE answer_id = #{answerId};
    </update>

</mapper>
